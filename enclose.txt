Когда ENCLOSE доходит до конца буфера, проверяем кончился ли файл. Если кончился, то делаем EXIT. 
Иначе - подкачиваем очередную порцию.

Доходим до конца буфера на скипе разделителей:
	inc rdi
_skip_delimeters:
	sub qword [bytes_to_read],1 ; [nkey],1
	jb _word2
	lodsb
	inc qword [_in_value]
	cmp al,20h
	jbe _skip_delimeters
_word3:
	stosb
	inc rdx
	sub qword [bytes_to_read],1 ; [nkey],1
	jb _word4
	lodsb
	inc qword [_in_value]
	cmp al,20h
	jnbe _word3
_word4:
; string to validate
	 mov [rbx],dl
	 ret
_word2:
;end of buffer
;load next portion
;а нет. тут засада. файл-то закрыт. по-хорошему его надо закрывать когда он скачается весь.
	mov rax,[handle]
	call _Push
        call _rdfile

; empty string
	 mov	rax,5449584504h ;4,"EXIT"
	 mov qword [rbx],rax
	 ;mov dword [ebx+4],054h ;"T",0
	 ret
	 
	 
;---------------------------	 
db 8,"INCLUDE:",0
	alignhe
	dq nfa_39
	dq _load
_load:
	call _parse
	push qword [block]
	push qword [file_pos]
	push qword [fileptr] ;block number
	push qword [bytes_to_read] ; size of buffer
	push qword [buffer] ;address of buffer
	mov  rax,[buffer_base]
	mov  [buffer],rax
	inc  qword [block]

	push qword [_in_value]
	mov   rax,[here_value]
	call  _push_ascii
	mov   rax,[here_value]
	call  _push
	call  _openfile
	call  _push
	call _rdfile    ;здесь 
	call _closefile ; переделать в впорось закрытие. если файл скачался весь, то закрываем его.
; Мысль: влить закрытие файла в чтение. как скачался, так и закрываем.

	xor rbx,rbx
	mov [_in_value],rbx
	mov qword [bytes_to_read],8192
	call _interpret


	pop qword [_in_value]
	pop qword [buffer]
	pop qword [bytes_to_read]
	pop qword [fileptr]
	pop qword [file_pos]
	pop qword [block]
	call _pop_ascii
	mov  rax,[block]
	test rax,rax
	je   _block0
	mov   rax,[here_value]
	call  _push
	call  _openfile
	call  _push
	call _rdfile
	call _closefile
	ret

_block0:
ret
