Похоже придется осваивать треды.
HANDLE WINAPI CreateThread(
  _In_opt_  LPSECURITY_ATTRIBUTES  lpThreadAttributes,
  _In_      SIZE_T                 dwStackSize,
  _In_      LPTHREAD_START_ROUTINE lpStartAddress,
  _In_opt_  LPVOID                 lpParameter,
  _In_      DWORD                  dwCreationFlags,
  _Out_opt_ LPDWORD                lpThreadId
);

Атрибуты - 0 Размер стека - 0  Стартовый адрес - адрес функции
Параметр - 0 (указатель на переменную, передаваемую в тред )
Флаги создания - 0 
Тред айди - выход

Элементарно!

WINAPIS:
   LIB: Kernel32.dll
       5_ints CreateThread
	   
;WINAPIS 

VARIABLE thr 

ASSEMBLER FORTH32 LINK ASSEMBLER CONTEXT !

HEADER  thread_test  HERE CELL+ , 
backward<
mov_rdx,# thr , 
inc_[rdx]
jmp <backward
ALIGN

FORTH32 CONTEXT !

0 0 ' thread_test @ 0 0 CreateThread h. 

EXIT 

Для высокоуровневых слов такая же заглушка, как и в message. Вызов через EXECUTE.
ТОлько нужен свой стек данных. стек возвратов свой автоматом.
Свой стек данных не проблема. Не проблема и переключить на него. А как должно переключаться обратно?
Как знать какой тред исполняется?
по значению rsp

Думаю делать проще - стек засунуть в локальныую память треда.
Прежде чем запустить тред надо инициировать его стек.
Только сначала надо определиться с хранилищем stack_base. Может взять еще 8кбайт локальной памяти?

Замкнутый круг какой-то.
 db 4,"Push",0
        alignhe
        dq nfa_2
        dq _push
_push:
        mov rbx,[stack_pointer]
        add rbx , cell_size
        mov r10,[stack_base]
        and rbx , [data_stack_mask]
        add r10,rbx
        mov [r10] , rax
        mov [stack_pointer],rbx
        ret
        align  cell_size
data_stack_mask dq 0x00ffff
stack_pointer dq 0
stack_base    dq 0        должна быть у каждого треда своя. Если мы заполним stack_base значением из одного треда, то в другом
треде значение будет тоже. Это что же, запихивать push - pop в локальную память треда? А линковать как?
Должно быть красиво.

Ладно, протестируем потоки на дебаге.

Кажется так.
Выделяем память для потока. Вместо указателя на саму память передаем индекс 
Не. ну фигня получается. Индекс ТЛС меняется для потока

Посмотрим как что там со стеком творрится в потоках

Так. Стековая версия заработала. Не работают, вестимо, слова требующие локальной памяти. Либо надо все перепроектировать, либо оставить как есть и наложить ограничения. 
Пока наложим ограничения, так как перепроектирование много дольше, да и нужно ли оно. 

Ура ура! Мультитредовость заработала.

