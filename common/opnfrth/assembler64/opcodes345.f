 ASSEMBLER CURRENT !  ASSEMBLER CONTEXT  !

          0x C0 0x FF 0x 48 0x 3 opcode inc_rax	      0x C3 0x FF 0x 48 0x 3 opcode inc_rbx
		  0x C1 0x FF 0x 48 0x 3 opcode inc_rcx		  0x C3 0x FF 0x 49 0x 3 opcode inc_r11
		  0x 02 0x FF 0x 48 0x 3 opcode inc_[rdx]     0x 03 0x FF 0x 49 0x 3 opcode inc_[r11] 
		  
		  0x C0 0x 83 0x 48 0x 3 opcode add_rax,b#    0x C1 0x 83 0x 48 0x 3 opcode add_rcx,b#
		  0x C4 0x 83 0x 48 0x 3 opcode add_rsp,b# 	  0x CC 0x 01 0x 48 0x 3 opcode add_rsp,rcx 
	      0x D8 0x 01 0x 48 0x 3 opcode add_rax,rbx	  0x E8 0x 01 0x 48 0x 3 opcode add_rax,rbp
		  
		  0x 02 0x 83 0x 48 0x 3 opcode add_[rdx],b#  0x 03 0x 83 0x 49 0x 3 opcode add_[r11],b#
		  
		  0x E8 0x 83 0x 48 0x 3 opcode sub_rax,b#    
		  0x C8 0x 29 0x 48 0x 3 opcode sub_rax,rcx 
		  0x C5 0x 2B 0x 48 0x 3 opcode sub_rax,rbp
		 
		  0x E9 0x 83 0x 48 0x 3 opcode sub_rcx,b#    
		  0x E9 0x 81 0x 48 0x 3 opcode sub_rcx,d#
		  
		  0x EC 0x 83 0x 48 0x 3 opcode sub_rsp,b#
		  0x EC 0x 81 0x 48 0x 3 opcode sub_rsp,d# 
		  
		  0x E0 0x 83 0x 48 0x 3 opcode and_rax,b#    0x E8 0x 21 0x 48 0x 3 opcode and_rax,rbp
		  0x E3 0x 83 0x 48 0x 3 opcode and_rbx,b#
		  
	      0x F0 0x 09 0x 48 0x 3 opcode or_rax,rsi 
		  
		  0x C8 0x 0F 0x 48 0x 3 opcode bswap_rax     0x CB 0x 0F 0x 48 0x 3 opcode bswap_rbx
		  0x CA 0x 0F 0x 48 0x 3 opcode bswap_rdx	  0x CE 0x 0F 0x 48 0x 3 opcode bswap_rsi
		  
0x C8 0x 39 0x 48 0x 3 opcode cmp_rax,rcx   0x E8 0x 39 0x 48 0x 3 opcode cmp_rax,rbp	  
0x 16 0x 04 0x 3B 0x 48 0x 4 opcode cmp_rax,[rsi+rdx] 0x D1 0x 39 0x 48 0x 3 opcode cmp_rcx,rdx	  0x F9 0x 81 0x 48 0x 3 opcode cmp_rcx,d# 	  0x FA 0x 81 0x 48 0x 3 opcode cmp_rdx,d# 
		  
    0x CE 0x 44 0x 0F 0x 48 0x 4 opcode cmove_rcx,rsi	
	0x CE 0x 45 0x 0F 0x 48 0x 4 opcode cmovne_rcx,rsi 
	0x C6 0x 42 0x 0F 0x 48 0x 4 opcode cmovc_rax,rsi 	
	0x C1 0x 42 0x 0F 0x 48 0x 4 opcode cmovc_rax,rcx 
	0x CA 0x 43 0x 0F 0x 48 0x 4 opcode cmovnc_rcx,rdx
	      
		  0x C9 0x FF 0x 48 0x 3 opcode dec_rcx 
		 
		  
	
		  0x C0 0x 31 0x 48 0x 3 opcode xor_rax,rax	  0x C9 0x 31 0x 48 0x 3 opcode xor_rcx,rcx
		  0x D2 0x 31 0x 48 0x 3 opcode xor_rdx,rdx	  0x ED 0x 31 0x 48 0x 3 opcode xor_rbp,rbp
		  0x C0 0x 31 0x 4D 0x 3 opcode xor_r8,r8
		  
		  0x D0 0x F7 0x 48 0x 3 opcode not_rax
		  0x D8 0x F7 0x 48 0x 3 opcode neg_rax
		  
	  0x E0 0x D3 0x 48 0x 3 opcode shl_rax,cl		  0x E3 0x C1 0x 48 0x 3 opcode shl_rbx,#
		  0x E8 0x D3 0x 48 0x 3 opcode shr_rax,cl	  0x EB 0x D1 0x 48 0x 3 opcode shr_rbx,1
		  0x E9 0x C1 0x 48 0x 3 opcode shr_rcx,#
		  
		  0x D3 0x FF 0x 41 0x 3 opcode call_r11
		  0x 13 0x FF 0x 41 0x 3 opcode call_[r11]
		  
      0x C0 0x 97 0x 0F 0x 3 opcode seta_al	      0x C0 0x 94 0x 0F 0x 3 opcode sete_al
	      0x C0 0x 92 0x 0F 0x 3 opcode setc_al	      0x C0 0x 95 0x 0F 0x 3 opcode setne_al
	      0x C3 0x 95 0x 0F 0x 3 opcode setne_bl      0x C0 0x 93 0x F0 0x 3 opcode setnc_al
	      0x C3 0x 93 0x 0F 0x 3 opcode setnc_bl      0x C1 0x 92 0x 0F 0x 3 opcode setc_cl
	      0x C1 0x 96 0x 0F 0x 3 opcode setbe_cl      0x 02 0x E0 0x C0 0x 3 opcode shl_al,2
	      0x C0 0x 85 0x 48 0x 3 opcode test_rax,rax	  0x C9 0x 85 0x 48 0x 3 opcode test_rcx,rcx 
	      0x 02 0x E3 0x C1 0x 3 opcode shl_ebx,2	      0x 03 0x E1 0x C1 0x 3 opcode shl_ecx,3
	      0x 10 0x E8 0x C1 0x 3 opcode shr_eax,16


	
	
 0x 02 0x 01 0x 48 0x 3 opcode add_[rdx],rax
	
 
 0x 00 0x B6 0x 0F 0x 48 0x 4 opcode movzx_rax,b[rax]
 0x 58 0x B6 0x 0F 0x 48 0x 4 opcode movzx_rbx,b[rax+b#]
0x 08 0x B6 0x 0F 0x 48 0x 4 opcode movzx_rcx,b[rax]
0x 0E 0x B6 0x 0F 0x 48 0x 4 opcode movzx_rcx,b[rsi]
  
0x 20 0x E6 0x 20 0x B0 0x 4 opcode eoi
0x A0 0x E6 0x 20 0x B0 0x 4 opcode eois

  0x 33 0x DF 0x 41 0x 3 opcode fbstp_[r11]       
  0x 2B 0x DF 0x 41 0x 3 opcode fild_[r11]  
  0x 23 0x DF 0x 41 0x 3 opcode fbld_[r11]        
  0x 3B 0x DF 0x 41 0x 3 opcode fistp_[r11]     

  
  0x 04 0x F0 0x 73 0x 0F 0x 66 0x 5 opcode psllq_xmm0,4
  0x 04 0x F5 0x 73 0x 0F 0x 66 0x 5 opcode psllq_xmm5,4
  0x 04 0x D1 0x 73 0x 0F 0x 66 0x 5 opcode psrlq_xmm1,4
  0x 04 0x D6 0x 73 0x 0F 0x 66 0x 5 opcode psrlq_xmm6,4
  
  0x 24 0x 44 0x 83 0x 48 0x 4 opcode add_q[rsp+b#],b# 
     
  EXIT   
  
  
	
