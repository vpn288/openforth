
ASSEMBLER CURRENT !  ASSEMBLER CONTEXT	!

      0x C0 0x 83 0x 48 0x 3 opcode add_rax,b# 
	  0x D8 0x 01 0x 48 0x 3 opcode add_rax,rbx
      0x 02 0x 83 0x 48 0x 3 opcode add_[rdx],b# 
      0x 02 0x 01 0x 48 0x 3 opcode add_[rdx],rax
0x 24 0x 44 0x 83 0x 48 0x 4 opcode add_q[rsp+b#],b#

      0x E0 0x 83 0x 48 0x 3 opcode and_rax,b# 
      0x E3 0x 83 0x 48 0x 3 opcode and_rbx,b#

            0x CC 0x 1 opcode int3
			
             0x D2 0x FF 0x 2 opcode call_rdx
			 
	               0x FC 0x 1 opcode cld
				   
	   0x C3 0x FF 0x 48 0x 3 opcode inc_rbx		   
	   0x 02 0x FF 0x 48 0x 3 opcode inc_[rdx] 
	   
	   0x C8 0x 89 0x 48 0x 3 opcode mov_rax,rcx 
       0x D0 0x 89 0x 4C 0x 3 opcode mov_rax,r10	
	   0x 40 0x 8B 0x 48 0x 3 opcode mov_rax,[rax+b#]  
 0x 24 0x 44 0x 8B 0x 48 0x 4 opcode mov_rax,[rsp+b#]	   
       0x C1 0x 89 0x 48 0x 3 opcode mov_rcx,rax
	   0x C7 0x 89 0x 48 0x 3 opcode mov_rdi,rax

	         0x BA 0x 48 0x 2 opcode mov_rdx,#
			 
	   
       0x C6 0x 89 0x 48 0x 3 opcode mov_rsi,rax	
	   0x 1A 0x 8B 0x 4C 0x 3 opcode mov_r11,[rdx]
       0x 08 0x 89 0x 48 0x 3 opcode mov_[rax],rcx	 
             0x 06 0x 88 0x 2 opcode mov_[rsi],al  
 0x 24 0x 44 0x 89 0x 48 0x 4 opcode mov_[rsp+b#],rax	
	   0x 03 0x 88 0x 41 0x 3 opcode mov_[r11],al  
 0x 03 0x 89 0x 41 0x 66 0x 4 opcode mov_[r11],ax
       0x 03 0x 89 0x 41 0x 3 opcode mov_[r11],eax   

 0x 00 0x B6 0x 0F 0x 48 0x 4 opcode movzx_rax,b[rax]
 0x 58 0x B6 0x 0F 0x 48 0x 4 opcode movzx_rbx,b[rax+b#] 
	  
	        0x 58 0x 1 opcode pop_rax
            0x 5B 0x 1 opcode pop_rbx
            0x 59 0x 1 opcode pop_rcx
			
			0x 50 0x 1 opcode push_rax
			0x 53 0x 1 opcode push_rbx
			0x 51 0x 1 opcode push_rcx
			
			0x F3 0x 1 opcode rep
            0x C3 0x 1 opcode ret
			
	    0x C3 0x 95 0x 0F 0x 3 opcode setne_bl 
		
        0x E3 0x C1 0x 48 0x 3 opcode shl_rbx,# 		
		
		        	0x AA 0x 1 opcode stosb
					
        0x E8 0x 83 0x 48 0x 3 opcode sub_rax,b#    
			
            0x C4 0x 86 0x 2 opcode xchg_al,ah	
      0x C8 0x 87 0x 48 0x 3 opcode xchg_rax,rcx
	  
        0x C0 0x 31 0x 48 0x 3 opcode xor_rax,rax	  
        0x C9 0x 31 0x 48 0x 3 opcode xor_rcx,rcx

EXIT          
